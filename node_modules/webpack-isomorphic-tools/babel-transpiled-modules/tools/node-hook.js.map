{"version":3,"sources":["../../source/tools/node-hook.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAYA,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;AACtB,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAA;;AAE9B,IAAI,SAAS,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAA;;AAEjD,IAAI,eAAe,GAAG,EAAE,CAAA;;AAExB,IAAI,MAAM,GACV;AACC,UAAS,EAAE,mBAAU,GAAG,EACxB;AACC,MAAI,OAAO,GAAG,KAAK,QAAQ,EAC3B;AACC,SAAM,IAAI,KAAK,CAAC,kCAAkC,GAAG,GAAG,CAAC,CAAC;GAC1D;AACD,MAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAClB;AACC,SAAM,IAAI,KAAK,CAAC,yDAAyD,GAAG,GAAG,CAAC,CAAC;GACjF;EACD;AACD,UAAS,EAAE,mBAAU,EAAE,EACvB;AACC,MAAI,OAAO,EAAE,KAAK,UAAU,EAC5B;AACC,SAAM,IAAI,KAAK,CAAC,uCAAuC,GAAG,EAAE,CAAC,CAAC;GAC9D;EACD;CACD,CAAA;;;;;;;AAOD,SAAS,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAC3C;AACC,QAAO,GAAG,OAAO,IAAI,EAAE,CAAA;;AAEvB,KAAI,OAAO,SAAS,KAAK,UAAU,IAAI,OAAO,SAAS,KAAK,WAAW,EACvE;AACC,WAAS,GAAG,SAAS,CAAA;AACrB,WAAS,GAAG,KAAK,CAAA;EACjB;;AAED,KAAI,OAAO,CAAC,OAAO,EACnB;AACC,SAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAA;EAClE;;AAED,OAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;AAC3B,OAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;;AAE3B,gBAAe,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;;AAE1D,OAAM,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,UAAU,MAAM,EAAE,QAAQ,EAC1D;AACC,MAAI,OAAO,CAAC,OAAO,EACnB;AACC,UAAO,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAA;GACrC;;;AAGD,MAAI,MAAM,GAAG,SAAS,CAAC,QAAQ,EAAE,SAAS,QAAQ,GAClD;AACC,kBAAe,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;GAC5C,CAAC,CAAA;;AAEF,QAAM,GAAG,SAAS,CAAC,MAAM,CAAC,CAAA;AAC1B,QAAM,CAAC,QAAQ,CAAC,mBAAmB,GAAG,MAAM,EAAE,QAAQ,CAAC,CAAA;EACvD,CAAA;;AAED,KAAI,OAAO,CAAC,OAAO,EACnB;AACC,SAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAA;EAC9B;CACD;;AAED,SAAS,MAAM,CAAC,SAAS,EACzB;AACC,KAAI,OAAO,SAAS,KAAK,WAAW,EACpC;AACC,WAAS,GAAG,KAAK,CAAA;EACjB;AACD,OAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;AAC3B,OAAM,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,eAAe,CAAC,SAAS,CAAC,CAAA;CAC1D;;AAED,MAAM,CAAC,OAAO,GACd;AACC,KAAI,EAAE,IAAI;AACV,OAAM,EAAE,MAAM;CACd,CAAA","file":"node-hook.js","sourcesContent":["// read this article for more info on what's going on here\r\n// http://bahmutov.calepin.co/hooking-into-node-loader-for-fun-and-profit.html\r\n\r\n// based on https://github.com/bahmutov/node-hook\r\n\r\n// based on https://github.com/gotwarlost/istanbul/blob/master/lib/hook.js\r\n\r\n/*\r\n Copyright (c) 2012, Yahoo! Inc.  All rights reserved.\r\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\r\n */\r\n\r\nvar fs = require('fs')\r\nvar Module = require('module')\r\n\r\nvar serialize = require('./serialize-javascript')\r\n\r\nvar originalLoaders = {}\r\n\r\nvar verify =\r\n{\r\n\textension: function (str)\r\n\t{\r\n\t\tif (typeof str !== 'string')\r\n\t\t{\r\n\t\t\tthrow new Error('expected string extension, have ' + str);\r\n\t\t}\r\n\t\tif (str[0] !== '.')\r\n\t\t{\r\n\t\t\tthrow new Error('Extension should start with dot, for example .js, have ' + str);\r\n\t\t}\r\n\t},\r\n\ttransform: function (fn)\r\n\t{\r\n\t\tif (typeof fn !== 'function')\r\n\t\t{\r\n\t\t\tthrow new Error('Transform should be a function, have ' + fn);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// function fallback()\r\n// {\r\n// \tmodule._compile(fs.readFileSync(filename), filename)\r\n// }\r\n\r\nfunction hook(extension, transform, options)\r\n{\r\n\toptions = options || {}\r\n\r\n\tif (typeof extension === 'function' && typeof transform === 'undefined')\r\n\t{\r\n\t\ttransform = extension\r\n\t\textension = '.js'\r\n\t}\r\n\r\n\tif (options.verbose)\r\n\t{\r\n\t\tconsole.log('hooking transform', transform.name, 'for', extension)\r\n\t}\r\n\r\n\tverify.extension(extension)\r\n\tverify.transform(transform)\r\n\r\n\toriginalLoaders[extension] = Module._extensions[extension]\r\n\r\n\tModule._extensions[extension] = function (module, filename)\r\n\t{\r\n\t\tif (options.verbose)\r\n\t\t{\r\n\t\t\tconsole.log('transforming', filename)\r\n\t\t}\r\n\r\n\t\t// var source = fs.readFileSync(filename, 'utf8')\r\n\t\tvar result = transform(filename, function fallback()\r\n\t\t{\r\n\t\t\toriginalLoaders[extension](module, filename)\r\n\t\t})\r\n\r\n\t\tresult = serialize(result)\r\n\t\tmodule._compile('module.exports = ' + result, filename)\r\n\t}\r\n\r\n\tif (options.verbose)\r\n\t{\r\n\t\tconsole.log('hooked function')\r\n\t}\r\n}\r\n\r\nfunction unhook(extension)\r\n{\r\n\tif (typeof extension === 'undefined')\r\n\t{\r\n\t\textension = '.js'\r\n\t}\r\n\tverify.extension(extension)\r\n\tModule._extensions[extension] = originalLoaders[extension]\r\n}\r\n\r\nmodule.exports =\r\n{\r\n\thook: hook,\r\n\tunhook: unhook\r\n}"]}