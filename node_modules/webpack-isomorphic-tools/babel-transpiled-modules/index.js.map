{"version":3,"sources":["../source/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import path   from 'path'\r\nimport fs     from 'fs'\r\n\r\nimport hook      from './tools/node-hook'\r\nimport serialize from './tools/serialize-javascript'\r\nimport Log       from './tools/log'\r\n\r\nimport { exists, clone, alias_camel_case } from './helpers'\r\nimport { default_webpack_assets, normalize_options } from './common'\r\n\r\n// using ES6 template strings\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings\r\nexport default class webpack_isomorphic_tools\r\n{\r\n\tconstructor(options)\r\n\t{\r\n\t\t// take the passed in options\r\n\t\tthis.options = alias_camel_case(clone(options))\r\n\r\n\t\t// a list of files which can be require()d normally on the server\r\n\t\t// (for example, if you have require(\"./file.json\") both in webpack and in the server code)\r\n\t\t// (should work, not tested)\r\n\t\tthis.options.exceptions = this.options.exceptions || []\r\n\r\n\t\t// used to keep track of cached assets and flush their caches on .refresh() call\r\n\t\tthis.cached_assets = []\r\n\r\n\t\t// add missing fields, etc\r\n\t\tnormalize_options(this.options)\r\n\r\n\t\t// logging\r\n\t\tthis.log = new Log('webpack-isomorphic-tools', { debug: this.options.debug })\r\n\r\n\t\tthis.log.debug('instantiated webpack-isomorphic-tools with options', this.options)\r\n\t}\r\n\r\n\t// sets development mode flag to whatever was passed (or true if nothing was passed)\r\n\t// (development mode allows asset hot reloading when used with webpack-dev-server)\r\n\tdevelopment(flag)\r\n\t{\r\n\t\t// set development mode flag\r\n\t\tthis.options.development = exists(flag) ? flag : true\r\n\r\n\t\tif (this.options.development)\r\n\t\t{\r\n\t\t\tthis.log.debug('entering development mode')\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.log.debug('entering production mode')\r\n\t\t}\r\n\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n\r\n\t// returns a mapping to read file paths for all the user specified asset types\r\n\t// along with a couple of predefined ones: javascripts and styles\r\n\tassets()\r\n\t{\r\n\t\t// webpack and node.js start in parallel\r\n\t\t// so webpack-assets.json might not exist on the very first run\r\n\t\t// (or there should be a better way of webpack notifying about build ending)\r\n\t\tif (!fs.existsSync(this.webpack_assets_path))\r\n\t\t{\r\n\t\t\tthis.log.error(`\"${this.webpack_assets_path}\" not found. Using an empty stub instead`)\r\n\t\t\treturn default_webpack_assets()\r\n\t\t}\r\n\r\n\t\treturn require(this.webpack_assets_path)\r\n\t}\r\n\r\n\t// clear the require.cache (only used in developer mode with webpack-dev-server)\r\n\trefresh()\r\n\t{\r\n\t\t// ensure this is development mode\r\n\t\tif (!this.options.development)\r\n\t\t{\r\n\t\t\tthrow new Error('.refresh() called in production mode. Did you forget to call .development() method on your webpack-isomorphic-tools server instance?')\r\n\t\t}\r\n\r\n\t\tthis.log.debug('flushing require() caches')\r\n\r\n\t\t// uncache webpack-assets.json file\r\n\t\t// this.log.debug(' flushing require() cache for webpack assets json file')\r\n\t\t// this.log.debug(` (was cached: ${typeof(require.cache[this.webpack_assets_path]) !== 'undefined'})`)\r\n\t\tdelete require.cache[this.webpack_assets_path]\r\n\r\n\t\t// uncache cached assets\r\n\t\tfor (let path of this.cached_assets)\r\n\t\t{\r\n\t\t\tthis.log.debug(` flushing require() cache for ${path}`)\r\n\t\t\tdelete require.cache[path]\r\n\t\t}\r\n\r\n\t\t// no assets are cached now\r\n\t\tthis.cached_assets = []\r\n\t}\r\n\r\n\t// Initializes server-side instance of `webpack-isomorphic-tools` \r\n\t// with the base path for your project, then calls `.register()`,\r\n\t// and after that calls .ready(callback).\r\n\t//\r\n\t// The `project_path` parameter must be identical \r\n\t// to the `context` parameter of your Webpack configuration \r\n\t// and is needed to locate `webpack-assets.json` \r\n\t//  which is output by Webpack process. \r\n\t//\r\n\t// sets up \"project_path\" option\r\n\t// (this option is required on the server to locate webpack-assets.json)\r\n\tserver(project_path, callback)\r\n\t{\r\n\t\t// project base path, required to locate webpack-assets.json\r\n\t\tthis.options.project_path = project_path\r\n\r\n\t\t// resolve webpack-assets.json file path\r\n\t\tthis.webpack_assets_path = path.resolve(this.options.project_path, this.options.webpack_assets_file_path)\r\n\r\n\t\t// register require() hooks\r\n\t\tthis.register()\r\n\r\n\t\t// call back when ready\r\n\t\treturn this.ready(callback)\r\n\t}\r\n\r\n\t// Registers Node.js require() hooks for the assets\r\n\t//\r\n\t// This is what makes the `requre()` magic work on server. \r\n\t// These `require()` hooks must be set before you `require()` \r\n\t// any of your assets \r\n\t// (e.g. before you `require()` any React components \r\n\t// `require()`ing your assets).\r\n\t//\r\n\t// read this article if you don't know what a \"require hook\" is\r\n\t// http://bahmutov.calepin.co/hooking-into-node-loader-for-fun-and-profit.html\r\n\tregister()\r\n\t{\r\n\t\tthis.log.debug('registering require() hooks for assets')\r\n\r\n\t\t// for each user specified asset type which isn't for .js files\r\n\t\t// (because '.js' files requiring already works natively)\r\n\t\tObject.keys(this.options.assets).filter(asset_type =>\r\n\t\t{\r\n\t\t\tconst description = this.options.assets[asset_type]\r\n\r\n\t\t\tif (description.extension)\r\n\t\t\t{\r\n\t\t\t\treturn description.extension !== 'js'\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn description.extensions.indexOf('js') < 0\r\n\t\t\t}\r\n\t\t})\r\n\t\t// register a require hook for each file extension of this asset type\r\n\t\t.forEach(asset_type =>\r\n\t\t{\r\n\t\t\tconst description = this.options.assets[asset_type]\r\n\t\t\t\r\n\t\t\tfor (let extension of description.extensions)\r\n\t\t\t{\r\n\t\t\t\tthis.register_extension(extension)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n\r\n\t// is called when you require() your assets\r\n\t// (or can be used manually without require hooks)\r\n\trequire(asset_path)\r\n\t{\r\n\t\tthis.log.debug(`requiring ${asset_path}`)\r\n\r\n\t\t// sanity check\r\n\t\tif (!asset_path)\r\n\t\t{\r\n\t\t\t// return ''\r\n\t\t\treturn undefined\r\n\t\t}\r\n\r\n\t\t// get real file path list\r\n\t\tvar assets = this.assets()\r\n\t\t\r\n\t\t// find this asset in the real file path list\r\n\t\tfor (let type of Object.keys(assets))\r\n\t\t{\r\n\t\t\tconst asset = assets[type][asset_path]\r\n\t\t\t// if the real path was found in the list - return it\r\n\t\t\tif (exists(asset))\r\n\t\t\t{\r\n\t\t\t\treturn asset\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// serve a not-found asset maybe\r\n\t\tthis.log.error(`asset not found: ${asset_path}`)\r\n\t\t// return ''\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t// registers a require hook for a particular file extension\r\n\tregister_extension(extension)\r\n\t{\r\n\t\tthis.log.debug(` registering a require() hook for *.${extension}`)\r\n\r\n\t\t// place the require() hook for this extension\r\n\t\thook.hook(`.${extension}`, (asset_path, fallback) =>\r\n\t\t{\r\n\t\t\tthis.log.debug(`require() hook fired for ${asset_path}`)\r\n\r\n\t\t\t// for caching\r\n\t\t\tconst global_asset_path = asset_path\r\n\r\n\t\t\t// sanity check\r\n\t\t\tif (!this.options.project_path)\r\n\t\t\t{\r\n\t\t\t\tthrow new Error(`You forgot to call the .server() method passing it your project's base path`)\r\n\t\t\t}\r\n\r\n\t\t\t// convert absolute path to relative path\r\n\t\t\tasset_path = path.relative(this.options.project_path, asset_path)\r\n\r\n\t\t\t// convert Windows path to a correct Webpack path\r\n\t\t\tasset_path = asset_path.replace(/\\\\/g, '/')\r\n\t\t\t// add './' in the beginning if it's missing (is the case on Windows for example)\r\n\t\t\tif (asset_path.indexOf('.') !== 0)\r\n\t\t\t{\r\n\t\t\t\tasset_path = './' + asset_path\r\n\t\t\t}\r\n\r\n\t\t\t// if this filename is in the user specified exceptions list\r\n\t\t\t// then fallback to the normal require() behaviour\r\n\t\t\tif (this.options.exceptions.indexOf(asset_path) >= 0)\r\n\t\t\t{\r\n\t\t\t\tthis.log.debug(`skipping require call for ${asset_path}`)\r\n\t\t\t\treturn fallback()\r\n\t\t\t}\r\n\r\n\t\t\t// track cached assets (only in development mode)\r\n\t\t\tif (this.options.development)\r\n\t\t\t{\r\n\t\t\t\t// mark this asset as cached\r\n\t\t\t\tthis.cached_assets.push(global_asset_path)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// require() this asset (returns the real file path for this asset, e.g. an image)\r\n\t\t\treturn this.require(asset_path)\r\n\t\t})\r\n\t}\r\n\r\n\t// Waits for webpack-assets.json to be created after Webpack build process finishes\r\n\t//\r\n\t// The callback is called when `webpack-assets.json` has been found \r\n\t// (it's needed for development because `webpack-dev-server` \r\n\t//  and your application server are usually run in parallel).\r\n\t//\r\n\tready(done)\r\n\t{\r\n\t\t// condition check interval\r\n\t\tconst interval = 1000 // in milliseconds\r\n\r\n\t\t// selfie\r\n\t\tconst tools = this\r\n\r\n\t\t// waits for condition to be met, then proceeds\r\n\t\tfunction wait_for(condition, proceed)\r\n\t\t{\r\n\t\t\tfunction check()\r\n\t\t\t{\r\n\t\t\t\t// if the condition is met, then proceed\r\n\t\t\t\tif (condition())\r\n\t\t\t\t{\r\n\t\t\t\t\treturn proceed()\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttools.log.debug(`(${tools.webpack_assets_path} not found)`)\r\n\t\t\t\ttools.log.info('(waiting for the first Webpack build to finish)')\r\n\r\n\t\t\t\tsetTimeout(check, interval)\r\n\t\t\t}\r\n\r\n\t\t\tcheck()\r\n\t\t}\r\n\r\n\t\t// wait for webpack-assets.json to be written to disk by Webpack\r\n\t\twait_for(() => fs.existsSync(this.webpack_assets_path), done)\r\n\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n}"]}