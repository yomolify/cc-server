'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _reducer = require('./reducer');

var _reducer2 = _interopRequireDefault(_reducer);

var _reduxForm = require('./reduxForm');

var _reduxForm2 = _interopRequireDefault(_reduxForm);

var _connectReduxForm = require('./connectReduxForm');

var _connectReduxForm2 = _interopRequireDefault(_connectReduxForm);

var _mapValues = require('./mapValues');

var _mapValues2 = _interopRequireDefault(_mapValues);

var _bindActionData = require('./bindActionData');

var _bindActionData2 = _interopRequireDefault(_bindActionData);

var _actions = require('./actions');

var actions = _interopRequireWildcard(_actions);

// bind form as first parameter of action creators
var boundActions = _extends({}, _mapValues2['default'](_extends({}, actions, {
  initializeWithKey: function initializeWithKey(key, data) {
    return _bindActionData2['default'](actions.initialize, { key: key })(data);
  }
}), function (action) {
  return function (form) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return _bindActionData2['default'](action, { form: form }).apply(undefined, args);
  };
}));

var blur = boundActions.blur;
var change = boundActions.change;
var focus = boundActions.focus;
var initialize = boundActions.initialize;
var initializeWithKey = boundActions.initializeWithKey;
var reset = boundActions.reset;
var startAsyncValidation = boundActions.startAsyncValidation;
var startSubmit = boundActions.startSubmit;
var stopAsyncValidation = boundActions.stopAsyncValidation;
var stopSubmit = boundActions.stopSubmit;
var touch = boundActions.touch;
var untouch = boundActions.untouch;

exports.blur = blur;
exports.change = change;
exports.connectReduxForm = _connectReduxForm2['default'];
exports.focus = focus;
exports.reducer = _reducer2['default'];
exports.initialize = initialize;
exports.initializeWithKey = initializeWithKey;
exports.reset = reset;
exports.startAsyncValidation = startAsyncValidation;
exports.startSubmit = startSubmit;
exports.stopAsyncValidation = stopAsyncValidation;
exports.stopSubmit = stopSubmit;
exports.touch = touch;
exports.untouch = untouch;
exports['default'] = _reduxForm2['default'];